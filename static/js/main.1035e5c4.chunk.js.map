{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","react_router_dom","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","about","htmlFor","onClick","toggleMode","defaultProps","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","filter","element","About","myStyle","setMystyle","_useState3","_useState4","btnText","setBtnText","aria-labelledby","data-bs-parent","border","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","App","setmode","setAlert","message","setTimeout","components_Navbar","body","setInterval","components_Alert","react_router","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"4MAIA,SAASA,EAAOC,GACd,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kCAAAC,OAAoCL,EAAMM,KAA1C,QAAAD,OAAqDL,EAAMM,OACzEL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMH,UAAU,eAAeI,GAAG,KAAKR,EAAMS,OAC7CR,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBM,KAAK,SAASC,iBAAe,WAAWC,iBAAe,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBAC1Ld,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAElBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BY,GAAG,0BAC3Cf,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mCACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMH,UAAU,kBAAkBa,eAAa,OAAOT,GAAG,KAAzD,SAEFP,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMH,UAAU,WAAWI,GAAG,UAAUR,EAAMkB,SAIhDjB,EAAAC,EAAAC,cAAA,OAAKC,UAAS,+BAAAC,OAA8C,UAAbL,EAAMM,KAAe,OAAO,UACzEL,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBe,QAAQ,0BAA5C,mBACAlB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAkBgB,QAASpB,EAAMqB,WAAYX,KAAK,WAAWM,GAAG,+BAkB3FjB,EAAOuB,aAAe,CACpBb,MAAO,iBACPS,MAAQ,mBAIKnB,QC9CA,SAASwB,EAASvB,GAC7B,IADoCwB,EA2CdC,mBAAS,IA3CKC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GA2C9BK,EA3C8BH,EAAA,GA2CxBI,EA3CwBJ,EAAA,GA4CtC,OACIzB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6B,SAAA,KACF9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY4B,MAAO,CAACC,MAAmB,SAAbjC,EAAMM,KAAc,QAAQ,UACjEL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAQJ,EAAMkC,SAC5BjC,EAAAC,EAAAC,cAAA,YAAUC,UAAU,eAAe+B,MAAON,EAAMO,SA3BjC,SAACC,GAEpBP,EAAQO,EAAMC,OAAOH,QAyByDH,MAAO,CAACO,gBAA8B,SAAbvC,EAAMM,KAAc,QAAQ,QAAQ2B,MAAmB,SAAbjC,EAAMM,KAAc,QAAQ,SAAUU,GAAG,QAAQwB,KAAK,OAEnMvC,EAAAC,EAAAC,cAAA,UAASsC,SAAwB,IAAdZ,EAAKa,OAAYtC,UAAU,4BAA4BgB,QAlD5D,WAElB,IAAIuB,EAAUd,EAAKe,cACnBd,EAAQa,GACR3C,EAAM6C,UAAU,0BAA4B,aA8CxC,uBACA5C,EAAAC,EAAAC,cAAA,UAASsC,SAAwB,IAAdZ,EAAKa,OAAYtC,UAAU,4BAA4BgB,QA5C5D,WAElB,IAAIuB,EAAUd,EAAKiB,cACnBhB,EAAQa,GACR3C,EAAM6C,UAAU,0BAA4B,aAwCxC,uBACA5C,EAAAC,EAAAC,cAAA,UAASsC,SAAwB,IAAdZ,EAAKa,OAAYtC,UAAU,4BAA4BgB,QAvCzD,WAGrBU,EADe,IAEf9B,EAAM6C,UAAU,6BAA+B,aAmC3C,cACA5C,EAAAC,EAAAC,cAAA,UAASsC,SAAwB,IAAdZ,EAAKa,OAAYtC,UAAU,4BAA4BgB,QA1B/D,WACf,IAAIS,EAAOkB,SAASC,eAAe,SACnCnB,EAAKoB,SACLC,UAAUC,UAAUC,UAAUvB,EAAKM,OAGnCnC,EAAM6C,UAAU,sBAAwB,aAoBpC,aACA5C,EAAAC,EAAAC,cAAA,UAASsC,SAAwB,IAAdZ,EAAKa,OAAYtC,UAAU,4BAA4BgB,QAlBxD,WACtB,IAAIuB,EAAUd,EAAKwB,MAAM,QACzBvB,EAAQa,EAAQW,KAAK,MACrBtD,EAAM6C,UAAU,mCAAqC,aAejD,uBAKR5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,MAAI6B,MAAO,CAACC,MAAmB,SAAbjC,EAAMM,KAAc,QAAQ,UAA9C,qBACAL,EAAAC,EAAAC,cAAA,KAAG6B,MAAO,CAACC,MAAmB,SAAbjC,EAAMM,KAAc,QAAQ,UAAWuB,EAAKwB,MAAM,OAAOE,OAAO,SAACC,GAAW,OAAwB,IAAjBA,EAAQd,SAAaA,OAAzH,cAA4Ib,EAAKa,OAAjJ,gBACAzC,EAAAC,EAAAC,cAAA,KAAG6B,MAAO,CAACC,MAAmB,SAAbjC,EAAMM,KAAc,QAAQ,UAAW,KAAQuB,EAAKwB,MAAM,KAAKE,OAAO,SAACC,GAAW,OAAwB,IAAjBA,EAAQd,SAAaA,OAA/H,iBACAzC,EAAAC,EAAAC,cAAA,MAAI6B,MAAO,CAACC,MAAmB,SAAbjC,EAAMM,KAAc,QAAQ,UAA9C,WACAL,EAAAC,EAAAC,cAAA,KAAG6B,MAAO,CAACC,MAAmB,SAAbjC,EAAMM,KAAc,QAAQ,UAAWuB,EAAKa,OAAO,EAAEb,EAAK,+DCjEpE,SAAS4B,IAAQ,IAAAjC,EACAC,mBAAS,CACrCQ,MAAO,QACPM,gBAAiB,UAHWb,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACvBkC,EADuBhC,EAAA,GACdiC,EADcjC,EAAA,GAAAkC,EAMAnC,mBAAS,oBANToC,EAAAlC,OAAAC,EAAA,EAAAD,CAAAiC,EAAA,GAMvBE,EANuBD,EAAA,GAMdE,EANcF,EAAA,GAyB9B,OACE5D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAA4BY,GAAG,wBAAwBgB,MAAO0B,GAC/EzD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAgB4B,MAAO0B,GACpCzD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAmBY,GAAG,oBAClCf,EAAAC,EAAAC,cAAA,UAAQC,UAAU,6BAA4B4B,MAAO0B,EAAShD,KAAK,SAASC,iBAAe,WAAWC,iBAAe,qBAAqBE,gBAAc,QAAQD,gBAAc,qBAA9K,uBAIFZ,EAAAC,EAAAC,cAAA,OAAKa,GAAG,oBAAoBZ,UAAU,8BAA8B4D,kBAAgB,mBAAmBC,iBAAe,0BACpHhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAf,kiBAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiB4B,MAAO0B,GACrCzD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAmBY,GAAG,oBAClCf,EAAAC,EAAAC,cAAA,UAAQC,UAAU,6BAA4B4B,MAAO0B,EAAShD,KAAK,SAASC,iBAAe,WAAWC,iBAAe,qBAAqBE,gBAAc,QAAQD,gBAAc,qBAA9K,gBAIFZ,EAAAC,EAAAC,cAAA,OAAKa,GAAG,oBAAoBZ,UAAU,8BAA8B4D,kBAAgB,mBAAmBC,iBAAe,0BACpHhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAf,kPAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiB4B,MAAO0B,GACrCzD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAmBY,GAAG,sBAClCf,EAAAC,EAAAC,cAAA,UAAQC,UAAU,6BAA4B4B,MAAO0B,EAAShD,KAAK,SAASC,iBAAe,WAAWC,iBAAe,uBAAuBE,gBAAc,QAAQD,gBAAc,uBAAhL,uBAIFZ,EAAAC,EAAAC,cAAA,OAAKa,GAAG,sBAAsBZ,UAAU,8BAA8B4D,kBAAgB,qBAAqBC,iBAAe,0BACxHhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAf,qXAIAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,UAAQiB,QAnDM,WACI,UAAlBsC,EAAQzB,OACV0B,EAAW,CACT1B,MAAO,QACPM,gBAAiB,QACjB2B,OAAQ,oBAEVH,EAAW,uBAEXJ,EAAW,CACT1B,MAAO,QACPM,gBAAiB,UAEnBwB,EAAW,sBAsCqB3D,UAAU,mBACrC0D,KC7CIK,MAff,SAAenE,GAMb,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY4B,MAAO,CAACoC,OAAO,SACzCpE,EAAMqE,OAASpE,EAAAC,EAAAC,cAAA,OAAKC,UAAS,eAAAC,OAAiBL,EAAMqE,MAAM3D,KAA7B,gCAAiE4D,KAAK,SAChGrE,EAAAC,EAAAC,cAAA,cARa,SAACoE,GAClB,IAAMC,EAAMD,EAAKzB,cACjB,OAAO0B,EAAMC,OAAO,GAAG7B,cAAgB4B,EAAME,MAAM,GAMtCC,CAAW3E,EAAMqE,MAAM3D,OADpB,KACsCV,EAAMqE,MAAMO,cCgEvDC,MA3Df,WAAe,IAAArD,EACWC,mBAAS,SADpBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNlB,EADMoB,EAAA,GACAoD,EADApD,EAAA,GAAAkC,EAGanC,mBAAS,MAHtBoC,EAAAlC,OAAAC,EAAA,EAAAD,CAAAiC,EAAA,GAGNS,EAHMR,EAAA,GAGCkB,EAHDlB,EAAA,GAKPhB,EAAY,SAACmC,EAAStE,GAC1BqE,EAAS,CACPH,IAAKI,EACLtE,KAAMA,IAGRuE,WAAW,WACTF,EAAS,OACR,OAsBL,OACE9E,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6B,SAAA,KACE9B,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACAN,EAAAC,EAAAC,cAAC+E,EAAD,CACEzE,MAAM,eACNH,KAAMA,EACNe,WAzBa,WACJ,UAATf,GACFwE,EAAQ,QACR/B,SAASoC,KAAKnD,MAAMO,gBAAkB,gBACtCM,EAAU,sBAAuB,WACjCE,SAAStC,MAAQ,yBACjB2E,YAAY,WACVrC,SAAStC,MAAQ,wBAChB,KACH2E,YAAY,WACVrC,SAAStC,MAAQ,mCAChB,QAEHqE,EAAQ,SACR/B,SAASoC,KAAKnD,MAAMO,gBAAkB,QACtCM,EAAU,uBAAwB,WAClCE,SAAStC,MAAQ,4BAUfS,MAAM,qBAGRjB,EAAAC,EAAAC,cAACkF,EAAD,CAAOhB,MAAOA,IACdpE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACfH,EAAAC,EAAAC,cAACmF,EAAA,EAAD,KACIrF,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAOC,KAAK,SAAS/B,QAASvD,EAAAC,EAAAC,cAACsD,EAAD,CAAOnD,KAAMA,MAC3CL,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAOC,KAAK,IAAI/B,QAASvD,EAAAC,EAAAC,cAACoB,EAAD,CAAUsB,UAAWA,EAAWX,QAAQ,oGAAoG5B,KAAMA,WCrDtKkF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDdY,IAASC,OACPrG,EAAAC,EAAAC,cAACF,EAAAC,EAAMqG,WAAP,KACEtG,EAAAC,EAAAC,cAACqG,EAAD,OAEFzD,SAASC,eAAe,SAM1BwC","file":"static/js/main.1035e5c4.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nfunction Navbar(props) {\n  return (\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n    <div className=\"container-fluid\">\n    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li className=\"nav-item\">\n          <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\n        </li>\n         \n      </ul>\n        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\n          <input className=\"form-check-input\"onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\n        </div>\n      {/* <form className=\"d-flex\">\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n      </form> */}\n    </div>\n  </div>\n</nav>\n  )\n}\n\n\nNavbar.propTypes = {\n  title : PropTypes.string.isRequired,\n  about:PropTypes.string.isRequired\n}\n\nNavbar.defaultProps = {\n  title :'set title here',\n  about : 'About Text Here'\n}\n\n\nexport default Navbar","import React,{useState} from 'react'\n\nexport default function TextForm(props) {\n    const handleUpClick = ()=>{\n        //console.log('Upper Case button was clicked');\n        let newText = text.toUpperCase();\n        setText(newText);\n        props.showAlert(\"Converted to Upper Case\" , \"success\");\n    }\n\n    const handleloClick = ()=>{\n        //console.log('Lower Case button was clicked');\n        let newText = text.toLowerCase();\n        setText(newText);\n        props.showAlert(\"Converted to Lower Case\" , \"success\");\n    }\n    const handleClearClick = ()=>{\n        //console.log('Clear the text Area');\n        let newText = (\"\");\n        setText(newText);\n        props.showAlert(\"Your Text Has Been Cleared\" , \"success\");\n        \n    }\n\n    const handleOnChange = (event)=>{\n        //console.log('On change');\n        setText(event.target.value)\n        \n    }\n    \n    const handleCopy = ()=>{\n        let text = document.getElementById(\"myBox\");\n        text.select();\n        navigator.clipboard.writeText(text.value);\n        // document.getSelection().removeAllRange();\n\n        props.showAlert(\"Copied to Clipboard\" , \"success\");\n    }\n\n    const handleExtraSpaces = ()=>{\n        let newText = text.split(/[ ]+/);\n        setText(newText.join(\" \"));\n        props.showAlert(\"Your ExtraSpace Has Been Removed\" , \"success\");\n    }\n\n    const[text, setText]= useState('')\n  return (\n      <>\n    <div className='container' style={{color:props.mode==='dark'?'white':'black'}}>\n        <div className=\"mb-3\">\n            <h3 className='my-2'>{props.heading}</h3> \n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'black':'white',color:props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"8\"/>\n        </div>\n            <button  disabled={text.length===0} className='btn btn-primary mx-1 my-1' onClick={handleUpClick}>Covert to UpperCase</button>\n            <button  disabled={text.length===0} className='btn btn-primary mx-1 my-1' onClick={handleloClick}>Covert to LowerCase</button>\n            <button  disabled={text.length===0} className='btn btn-primary mx-1 my-1' onClick={handleClearClick}>Clear Text</button>\n            <button  disabled={text.length===0} className='btn btn-primary mx-1 my-1' onClick={handleCopy}>Copy Text</button>\n            <button  disabled={text.length===0} className='btn btn-primary mx-1 my-1' onClick={handleExtraSpaces}>Remove Extra Space</button>\n\n\n    </div>\n\n    <div className=\"container my-3\">\n        <h3 style={{color:props.mode==='dark'?'white':'black'}}>Your Text Summary</h3>\n        <p style={{color:props.mode==='dark'?'white':'black'}}>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} Charcerters</p>\n        <p style={{color:props.mode==='dark'?'white':'black'}}>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} Minute read </p>\n        <h4 style={{color:props.mode==='dark'?'white':'black'}}>Preview</h4>\n        <p style={{color:props.mode==='dark'?'white':'black'}}>{text.length>0?text:\"Enter Somethiong in the above text box to preview here...\"}</p>\n    </div>\n    \n\n    </>\n  )\n}\n\n","import React, { useState } from \"react\";\n\nexport default function About() {\n  const [myStyle, setMystyle] = useState({\n    color: \"white\",\n    backgroundColor: \"black\",\n  });\n\n  const [btnText, setBtnText] = useState(\"Enable Dark Mode\");\n\n  const toggleStyle = () => {\n    if (myStyle.color === \"black\") {\n      setMystyle({\n        color: \"white\",\n        backgroundColor: \"black\",\n        border: \"2px solid white\",\n      });\n      setBtnText(\"Enable light Mode\");\n    } else {\n      setMystyle({\n        color: \"black\",\n        backgroundColor: \"white\",\n      });\n      setBtnText(\"Enable dark Mode\");\n    }\n  };\n\n  return (\n    <div className=\"accordion accordion-flush\" id=\"accordionFlushExample\" style={myStyle}>\n  <div className=\"accordion-item\"style={myStyle}>\n    <h2 className=\"accordion-header\" id=\"flush-headingOne\">\n      <button className=\"accordion-button collapsed\"style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseOne\" aria-expanded=\"false\" aria-controls=\"flush-collapseOne\">\n        Anaylize Your Text \n      </button>\n    </h2>\n    <div id=\"flush-collapseOne\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingOne\" data-bs-parent=\"#accordionFlushExample\">\n      <div className=\"accordion-body\">Text analysis involves information retrieval, lexical analysis to study word frequency distributions, pattern recognition, tagging/annotation, information extraction, data mining techniques including link and association analysis, visualization, and predictive analytics. The overarching goal is, essentially, to turn text into data for analysis, via application of natural language processing (NLP), different types of algorithms and analytical methods. An important phase of this process is the interpretation of the gathered information.</div>\n    </div>\n  </div>\n  <div className=\"accordion-item\" style={myStyle} >\n    <h2 className=\"accordion-header\" id=\"flush-headingTwo\">\n      <button className=\"accordion-button collapsed\"style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseTwo\" aria-expanded=\"false\" aria-controls=\"flush-collapseTwo\">\n        Free To Use \n      </button>\n    </h2>\n    <div id=\"flush-collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingTwo\" data-bs-parent=\"#accordionFlushExample\">\n      <div className=\"accordion-body\">This is a list of free and open-source software packages, computer software licensed under free software licenses and open-source licenses. Software that fits the Free Software Definition may be more appropriately called free software; </div>\n    </div>\n  </div>\n  <div className=\"accordion-item\" style={myStyle}>\n    <h2 className=\"accordion-header\" id=\"flush-headingThree\">\n      <button className=\"accordion-button collapsed\"style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseThree\" aria-expanded=\"false\" aria-controls=\"flush-collapseThree\">\n        Browser Compatible\n      </button>\n    </h2>\n    <div id=\"flush-collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingThree\" data-bs-parent=\"#accordionFlushExample\">\n      <div className=\"accordion-body\">A text-based web browser is a web browser that renders only the text of web pages, and ignores most graphic content. Under small bandwidth connections, usually, they render pages faster than graphical web browsers due to lowered bandwidth demands. Additionally, the greater CSS, JavaScript and typography functionality of graphical browsers require more CPU resources</div>\n    </div>\n  </div>\n\n      <div className=\"container my-3\">\n        <button onClick={toggleStyle} className=\"btn btn-primary\">\n          {btnText}\n        </button>\n      </div>\n  </div>\n  );\n}\n","import React from 'react'\n\nfunction Alert(props) {\n  const capitalize = (word)=>{\n    const lower=word.toLowerCase();\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\n\n  }\n  return (\n    <div className=\"container\" style={{height:'50px'}}>\n    {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n        <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\n    </div>}\n    </div>\n  )\n}\n\nexport default Alert","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport About from \"./components/About\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n// import { Routes ,Route } from 'react-router-dom';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n// import { BrowserRouter as  Routes, Route} from \"react-router-dom\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\");\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"rgb(20 31 67)\";\n      showAlert(\"Dark Mode is Enable\", \"success\");\n      document.title = \"TextUtiles - Dark Mode\";\n      setInterval(() => {\n        document.title = \"TextUtiles - Amazing\";\n      }, 2000);\n      setInterval(() => {\n        document.title = \"TextUtiles - Install TextUtiles\";\n      }, 1500);\n    } else {\n      setmode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode is Enable\", \"success\");\n      document.title = \"TextUtiles - Light Mode\";\n    }\n  };\n  return (\n    <>\n      <BrowserRouter>\n      <Navbar\n        title=\"TextDesiging\"\n        mode={mode}\n        toggleMode={toggleMode}\n        about=\"About TextUtiles\"\n      />\n      {/* <Navbar/> */}\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n      <Routes>\n          <Route path=\"/about\" element={<About mode={mode}/>}/>\n          <Route path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Try TextUtiles - Covernt Words Upper to Lower, Lower to Upper, Removing Extra Space , Word Count \" mode={mode}/>} />\n      </Routes>\n        {/* <About/> */}\n        \n      </div>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}